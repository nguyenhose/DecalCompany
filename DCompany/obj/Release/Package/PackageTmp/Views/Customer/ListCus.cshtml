@using MvcPaging
@model IPagedList<DCompany.Models.Customer>
@using DCompany.Models;
@{
    var Cus = ViewBag.customer;
    var order = (List<Order>)ViewBag.order;
    var payment = (List<PayMent>)ViewBag.payment;
    var allowEdit = ViewBag.AllowEdit;
    var allowAdd = ViewBag.AllowAddOrder;
    }
	<table border="1" style="color:Black;background-color:White;border-color:#999999;border-width:1px;border-style:Solid;width:100%;border-collapse:collapse;">
   
     <tr style="color:White;background-color:Black;font-weight:bold;">
        <th>
           Khách Hàng
        </th>
        <th>
           Mã Khách Hàng
        </th>

         @if (allowEdit == true) { 
          <th style="width:75px"></th>
         <th style="width:75px"></th>}
       
    </tr>
@foreach (var item in Model)
{
    <tr style="border:1px solid #ddd">
        <td >
          <table class="table">
                  <tr>
                   <td>Họ tên:</td>
        <td>
        <a href="Customer/Details/@item.Id">@Html.DisplayFor(modelItem => item.Name)</a>    
        </td></tr>
                  <tr>
            <td>Sdt:</td>
            <td>
            @Html.DisplayFor(modelItem => item.PhoneNumber)
        </td>
        </tr>
                  <tr>
                  <td>Email:</td>
                  <td>
            @item.Email
        </td>
              </tr>
                  <tr>
            <td>Địa chỉ</td>
            <td>
            @Html.DisplayFor(modelItem => item.Address)
        </td>
        </tr>
                  <tr>
            <td>Công ty</td>
            <td>
            @Html.DisplayFor(modelItem => item.CompanyName)
        </td>
        </tr>
          </table>
        </td >
    
           <td style="text-align:center;vertical-align:central">
          <div style="text-transform:uppercase;font-size:20px"><b> @Html.DisplayFor(modelItem => item.Code)</b></div> 
                  
    @if (allowAdd == true) {
              <div class="btn btn-info" onclick="add(@item.Id)"><i class="icon-plus icon-white"></i> Thêm đơn hàng </div>  }
                                                                                                                           
        @{
        var pay = payment.Where(s => s.CustomerId == item.Id).Sum(s => s.Cash);
        var Order = order.Where(s => s.CustomerId == item.Id).Sum(s => s.TotalCash);
        var loan = Order - pay;}
    
   
 <div  class="money"style="margin-top:10px;">Tiền nợ :  @{
    var tranloan = String.Format(System.Globalization.CultureInfo.CreateSpecificCulture("vi-VN"), "{0:C}", loan);
    tranloan = tranloan.Substring(0, tranloan.LastIndexOf(','));
     @tranloan
     } đ

     </div>
        </td>
    @if (allowEdit == true)
    {
    <td>
          <div class="btn btn-info" onclick="edit(@item.Id)"><i class="icon-edit icon-white"></i> Sửa </div>    
          
        </td>
     <td>
             <div onclick="deleteConfirm(@item.Id)" class="btn btn-danger">
                             <i class="icon-trash icon-white"></i>
                            Xóa</div></td>
    }
        </tr>
}
        </table>

   <div class="pager1">
    @Html.Raw(Ajax.Pager(
            new Options
            {
                PageSize = Model.PageSize,
                TotalItemCount = Model.TotalItemCount,
                CurrentPage = Model.PageNumber,
                ItemTexts = new ItemTexts() { Next = "Next", Previous = "Previous", Page = "P" },
                ItemIcon = new ItemIcon() { First = "icon-backward", Previous = "icon-chevron-left", Next = "icon-chevron-right", Last = "icon-forward" },
                TooltipTitles = new TooltipTitles() { Next = "Next page", Previous = "Previous page", Page = "Page {0}." },
                Size = Size.normal,
                Alignment = Alignment.centered,
                IsShowControls = true,
                IsShowFirstLast = true,
                CssClass = ""
            },
            new AjaxOptions
            {
                UpdateTargetId = "grid-list",
                OnBegin = "beginPaging",
                OnSuccess = "successPaging",
                OnFailure = "failurePaging"
            }, new { controller = "Customer", action = "Index", employee_name = ViewData["employee_name"]  }))
      </div>
        <script>
            function deleteConfirm(id) {
                var ok = confirm("Bạn có chắc chắn xóa ?");
                if (ok) {
                    $.ajax({
                        url: "/Customer/DeleteConfirmed",
                        type: "GET",
                        data: { Id: id },
                        success: function (data) {
                            location.reload();
                        }
                    });
                }
             

            }
            function edit(id) {
                window.location = "Customer/Edit/" + id;
            }
            function add(id) {
                window.location = "Order/Create/" + id;
            }
            
        </script>