@using MvcPaging
@model IPagedList<DCompany.Models.PayMent>
@using DCompany.Models;
@{
    var listTask = (List<DCompany.Models.PayMent>)ViewBag.listStaff;
    var stt = 0;
    var order = (List<Order>)ViewBag.order;
    var payment = (List<PayMent>)ViewBag.payment;
    var allowEdit = ViewBag.AllowEdit;
    }


  <table border="1" style="color:Black;background-color:White;border-color:#999999;border-width:1px;border-style:Solid;width:100%;border-collapse:collapse;">
   
     <tr style="color:White;background-color:Black;font-weight:bold;">
        <th>
    Tên khách hàng
        </th>
        <th>
 Số tiền thanh toán
        </th>
        <th>Số tiền còn lại</th>
         <th> Ảnh hóa đơn</th>
         @if (allowEdit == true) {
         <th></th>  
         <th></th>   }
            
    </tr>

@foreach (var item in Model)
{
    stt++;
    <tr style="border:1px solid #ddd">
        <td style="text-align:center">  <a href="Customer/Details/@item.CustomerId"> @Html.DisplayFor(modelItem => item.Customer.Name)</a></td>
                <td class="money" style="color:green">
 
         <div  class="money" style="margin-top:10px;">  @{
    var tranloan = String.Format(System.Globalization.CultureInfo.CreateSpecificCulture("vi-VN"), "{0:C}", item.Cash);
    tranloan = tranloan.Substring(0, tranloan.LastIndexOf(','));
     @tranloan
                         } đ
                             </div>

        </td >
        <td class="money" style="color:red;">
            @{
    var Order = order.Where(s => s.CustomerId == item.CustomerId).Sum(s => s.TotalCash);
    var pay = payment.Where(s => s.CustomerId == item.CustomerId && s.DatePay.Value.Second <= item.DatePay.Value.Second
                                                               && s.DatePay.Value.Minute <= item.DatePay.Value.Minute
                                                               && s.DatePay.Value.Hour <= item.DatePay.Value.Hour
                                                               && s.DatePay.Value.Day <= item.DatePay.Value.Day
                                                               && s.DatePay.Value.Month <= item.DatePay.Value.Month
                                                               && s.DatePay.Value.Year <= item.DatePay.Value.Year).Sum(s => s.Cash);
    var rest = Order - pay;
                }
                         <div  class="money"style="margin-top:10px;">  @{
    var tranloans = String.Format(System.Globalization.CultureInfo.CreateSpecificCulture("vi-VN"), "{0:C}", rest);
    tranloans = tranloans.Substring(0, tranloans.LastIndexOf(','));
     @tranloans
                         } đ
                             </div>
        </td>
           <td>
                <div data-toggle="modal" data-target="#myModal-@stt" style="cursor:pointer;text-align:center" >   <img src="~/img/@item.ImageUrl"  style="width:100px;height:100px" /></div>
              
             
        </td>
        @if (allowEdit == true) {
        <td style="text-align:center">
               <div class="btn btn-info" onclick="edit(@item.Id)"><i class="icon-edit icon-white"></i> Sửa </div>    
        </td>
           <td style="text-align:center"> <div onclick="deleteConfirm(@item.Id)" class="btn btn-danger">
                             <i class="icon-trash icon-white"></i>
                            Xóa</div></td>
        }
        </tr>
    <tr>
        <td>
            <div class="modal fade" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true" id="myModal-@stt" >
                   <div class="modal-dialog">
                       <div class="modal-content" >
                           <img src="~/img/@item.ImageUrl" style="width:100%;height:400px" />
                       </div>
                   </div>
               </div>
        </td>
    </tr>
      
}

</table>
     <div class="pager1">
    @Html.Raw(Ajax.Pager(
            new Options
            {
                PageSize = Model.PageSize,
                TotalItemCount = Model.TotalItemCount,
                CurrentPage = Model.PageNumber,
                ItemTexts = new ItemTexts() { Next = "Next", Previous = "Previous", Page = "P" },
                ItemIcon = new ItemIcon() { First = "icon-backward", Previous = "icon-chevron-left", Next = "icon-chevron-right", Last = "icon-forward" },
                TooltipTitles = new TooltipTitles() { Next = "Next page", Previous = "Previous page", Page = "Page {0}." },
                Size = Size.normal,
                Alignment = Alignment.centered,
                IsShowControls = true,
                IsShowFirstLast = true,
                CssClass = ""
            },
            new AjaxOptions
            {
                UpdateTargetId = "grid-list",
                OnBegin = "beginPaging",
                OnSuccess = "successPaging",
                OnFailure = "failurePaging"
            }, new { controller = "Payment", action = "Index", employee_name = ViewData["employee_name"]  }))
      </div>
  <script>
            function deleteConfirm(id) {
                var ok = confirm("Bạn có chắc chắn xóa ?");
                if (ok) {
                    $.ajax({
                        url: "/Payment/DeleteConfirmed",
                        type: "GET",
                        data: { Id: id },
                        success: function (data) {
                            location.reload();
                        }
                    });
                }
             

            }
            function edit(id) {
                window.location = "Payment/Edit/" + id;
            }
        </script>